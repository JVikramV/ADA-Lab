#include <stdio.h>

struct Item {
    int weight;
    int value;
};

void fractionalKnapsack(int capacity, struct Item items[], int n) {
    float ratio[n], totalValue = 0.0;
    int i, j;

    // Calculate value/weight ratio
    for (i = 0; i < n; i++) {
        ratio[i] = (float)items[i].value / items[i].weight;
    }

    // Sort items by ratio in descending order
    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (ratio[i] < ratio[j]) {
                // swap ratios
                float tempR = ratio[i];
                ratio[i] = ratio[j];
                ratio[j] = tempR;

                // swap items
                struct Item temp = items[i];
                items[i] = items[j];
                items[j] = temp;
            }
        }
    }

    // Greedily take items
    for (i = 0; i < n; i++) {
        if (capacity >= items[i].weight) {
            capacity -= items[i].weight;
            totalValue += items[i].value;
        } else {
            totalValue += ratio[i] * capacity;
            break;
        }
    }

    printf("Maximum value in knapsack = %.2f\n", totalValue);
}

int main() {
    int n, capacity, i;

    printf("Enter number of items: ");
    scanf("%d", &n);

    struct Item items[n];

    for (i = 0; i < n; i++) {
        printf("Enter weight and value of item %d: ", i + 1);
        scanf("%d %d", &items[i].weight, &items[i].value);
    }

    printf("Enter capacity of knapsack: ");
    scanf("%d", &capacity);

    fractionalKnapsack(capacity, items, n);

    return 0;
}
